import RPi.GPIO as GPIO
import time

# Set up GPIO pins
GPIO.setmode(GPIO.BCM)
GPIO_TRIG = 11
GPIO_ECHO = 18
LED_PIN = 21  # Pin for the LED

GPIO.setup(GPIO_TRIG, GPIO.OUT)
GPIO.setup(GPIO_ECHO, GPIO.IN)
GPIO.setup(LED_PIN, GPIO.OUT)  # Set up LED pin as output

try:
    while True:
        # Ensure the trigger pin is low
        GPIO.output(GPIO_TRIG, GPIO.LOW)
        time.sleep(2)

        # Trigger the ultrasonic pulse
        GPIO.output(GPIO_TRIG, GPIO.HIGH)
        time.sleep(0.00001)
        GPIO.output(GPIO_TRIG, GPIO.LOW)

        # Wait for the echo response
        while GPIO.input(GPIO_ECHO) == 0:
            start_time = time.time()

        while GPIO.input(GPIO_ECHO) == 1:
            bounce_back_time = time.time()

        # Calculate the pulse duration and distance
        pulse_duration = bounce_back_time - start_time
        distance = round(pulse_duration * 17150, 2)

        # Print the distance
        print(f"Distance: {distance} cm")

        # Check distance and control LED
        if distance > 100:
            GPIO.output(LED_PIN, GPIO.HIGH)  # Turn on LED if distance > 100 cm
        else:
            GPIO.output(LED_PIN, GPIO.LOW)   # Turn off LED otherwise

        # Add a small delay before the next measurement
        time.sleep(0.5)

except KeyboardInterrupt:
    # Clean up GPIO pins when interrupted
    print("Measurement stopped by user")
    GPIO.cleanup()
